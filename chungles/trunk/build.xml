<project name="chungles" default="all" basedir=".">
	<property file="build.properties"/>

	<property name="project.name" value="chungles"/>

	<property name="src.dir" value="${basedir}/src"/>
	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="img.dir" value="${basedir}/images"/>
	<property name="bin.dir" value="${basedir}/bin"/>	
	<property name="doc.dir" value="${basedir}/doc"/>

	<!-- paths to external jars. can be overwritten via build.properties-->
	<property name="jmdns.jar" value="${lib.dir}/jmdns.jar"/>
	<property name="swt.jar" value="${lib.dir}/swt.jar"/>

	<!-- classpath for compilation (external jars) -->
	<path id="compile.path">
		<pathelement location="${jmdns.jar}"/>
		<pathelement location="${swt.jar}"/>
	</path>

	<!-- classpath for the project -->
	<path id="project.path">
		<dirset dir="${bin.dir}"/>
	</path>

	<target name="prepare">
		<mkdir dir="${bin.dir}"/>
		<mkdir dir="${doc.dir}"/>
	</target>

	<target name="setversion">
		<exec executable="svnversion" outputproperty="chungles.version">
			<arg line="-n ."/>
		</exec>
		<replaceregexp file="${basedir}/src/org/chungles/core/Configuration.java"
			match='REV="(.*)"'
			replace='REV="${chungles.version}"'/>
	</target>
	
	<target name="unsetversion">
		<replaceregexp file="${basedir}/src/org/chungles/core/Configuration.java"
			match='REV="(.*)"'
			replace='REV=" "'/>
	</target>
	
	<target name="compile" depends="prepare,setversion">
		<javac srcdir="${src.dir}"
			destdir="${bin.dir}">
			<classpath refid="compile.path"/>
		</javac>
	</target>

	<target name="jar" depends="compile">
		<jar jarfile="${lib.dir}/chungles.jar">
			<fileset dir="${basedir}">
				<filename name="**/images/*"/>				
			</fileset>
			<fileset dir="${basedir}/bin"/>
			<manifest>
				
				<attribute name="Main-Class" value="org.chungles.application.Main"/>
			</manifest>
		</jar>
	</target>
	

	<target name="javadoc">
		<javadoc destdir="${doc.dir}">
			<classpath refid="compile.path"/>
			<fileset dir="${src.dir}"/>
		</javadoc>
	</target>

	<target name="generate-scripts" depends="jar">
		<echo file="${basedir}/run-console.sh">java -classpath ${jmdns.jar}:${lib.dir}/chungles.jar org.chungles.application.Main --ui=console
		</echo>
		
		<echo file="${basedir}/run.sh">java -classpath ${swt.jar}:${jmdns.jar}:${lib.dir}/chungles.jar -Djava.library.path=${lib.dir} org.chungles.application.Main --ui=swt
		</echo>
		
		<echo file="${basedir}/run-daemon.sh">java -classpath ${jmdns.jar}:${lib.dir}/chungles.jar org.chungles.application.Main --ui=none
		</echo>
		
		<chmod dir="${basedir}" perm="a+x" includes="**/run*.sh"/>
	</target>

	<target name="run" depends="compile">
		<java classname="org.chungles.application.Main" fork="yes">
			<sysproperty key="java.library.path" value="${lib.dir}"/>
			<classpath refid="compile.path"/>
			<classpath refid="project.path"/>
			<classpath path="${basedir}"/>
		</java>
	</target>

	<target name="all" depends="prepare,setversion,compile,javadoc,jar,generate-scripts"/>

	<target name="clean" depends="unsetversion">
		<delete dir="${bin.dir}"/>
		<delete dir="${doc.dir}"/>
		<delete file="${lib.dir}/chungles.jar"/>
		<delete file="${basedir}/run-console.sh"/>
		<delete file="${basedir}/run-daemon.sh"/>
		<delete file="${basedir}/run.sh"/>
	</target>

</project>
